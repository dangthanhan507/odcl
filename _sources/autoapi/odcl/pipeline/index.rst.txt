:py:mod:`odcl.pipeline`
=======================

.. py:module:: odcl.pipeline

.. autoapi-nested-parse::

   
   ..
       !! processed by numpydoc !!


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   odcl.pipeline.BBox
   odcl.pipeline.TargetDrawer




Attributes
~~~~~~~~~~

.. autoapisummary::

   odcl.pipeline._EDGETPU_SHARED_LIB
   odcl.pipeline.Target
   odcl.pipeline.ap


.. py:data:: _EDGETPU_SHARED_LIB
   

   
















   ..
       !! processed by numpydoc !!

.. py:data:: Target
   

   
















   ..
       !! processed by numpydoc !!

.. py:class:: BBox(xmin, ymin, xmax, ymax)

   Bases: :py:obj:`object`

   
















   ..
       !! processed by numpydoc !!
   .. py:method:: overlap(self, other)

      
      check if this bbox overlaps with another bbox
















      ..
          !! processed by numpydoc !!


.. py:class:: TargetDrawer(labels)

   Bases: :py:obj:`object`

   
















   ..
       !! processed by numpydoc !!
   .. py:method:: get_rand_color()
      :staticmethod:

      
















      ..
          !! processed by numpydoc !!

   .. py:method:: draw_tile_frame(self, img, alpha=0.9)

      
      draw a frame around the input. Useful for visualizing tiles.
















      ..
          !! processed by numpydoc !!

   .. py:method:: draw_target_bbox(self, img, target, color=None)

      
      Draw a bbox, class label, and confidence score around a target onto image

      updated image with target drawn onto it















      ..
          !! processed by numpydoc !!

   .. py:method:: draw_all(self, img, targets, color=None)

      
      Draw all current targets onto img


      :Parameters:

          **img** : cv2 Image
              (H, W, 3) 8-bit

          **targets: list of Target**
              targets to draw

      :Returns:

          (H, W, 3) 8-bit image
              Image with targets drawn













      ..
          !! processed by numpydoc !!

   .. py:method:: make_target_bbox_img_opencv(self, img, targets)

      
















      ..
          !! processed by numpydoc !!


.. py:data:: ap
   

   
















   ..
       !! processed by numpydoc !!

